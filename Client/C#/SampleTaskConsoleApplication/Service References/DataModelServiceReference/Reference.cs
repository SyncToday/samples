//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleTaskConsoleApplication.DataModelServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sync.today/", ConfigurationName="DataModelServiceReference.DataModelSoap")]
    public interface DataModelSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.User CreateUser(SampleTaskConsoleApplication.DataModelServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> CreateUserAsync(SampleTaskConsoleApplication.DataModelServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateUser2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.User CreateUser2(string InternalId, int Maintenance, string Email, string Password, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateUser2", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> CreateUser2Async(string InternalId, int Maintenance, string Email, string Password, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.User UpdateUser(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> UpdateUserAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.User GetUser(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetUser", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> GetUserAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.Account CreateAccount(SampleTaskConsoleApplication.DataModelServiceReference.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.Account> CreateAccountAsync(SampleTaskConsoleApplication.DataModelServiceReference.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateAccount2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.Account CreateAccount2(string InternalId, string BelongsToUser, string Username, string Password, string Server, string AccountAssemblyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateAccount2", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.Account> CreateAccount2Async(string InternalId, string BelongsToUser, string Username, string Password, string Server, string AccountAssemblyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.Account UpdateAccount(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.Account> UpdateAccountAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.Account GetAccount(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.Account> GetAccountAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetAccounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        System.Data.DataSet GetAccounts(System.Guid userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetAccounts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountsAsync(System.Guid userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetAccounts2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        System.Data.DataSet GetAccounts2(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetAccounts2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccounts2Async(string userid);
        
        // CODEGEN: Parameter 'relationId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskResponse CreateTask(SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateTask", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskResponse> CreateTaskAsync(SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskRequest request);
        
        // CODEGEN: Parameter 'relationId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateEvent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.CreateEventResponse CreateEvent(SampleTaskConsoleApplication.DataModelServiceReference.CreateEventRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateEvent", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateEventResponse> CreateEventAsync(SampleTaskConsoleApplication.DataModelServiceReference.CreateEventRequest request);
        
        // CODEGEN: Parameter 'relationId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateContact", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.CreateContactResponse CreateContact(SampleTaskConsoleApplication.DataModelServiceReference.CreateContactRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateContact", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateContactResponse> CreateContactAsync(SampleTaskConsoleApplication.DataModelServiceReference.CreateContactRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateContact2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact CreateContact2(
                    string ExternalId, 
                    string FullName, 
                    string PhoneNumberHome, 
                    string PhoneNumberWork, 
                    string PhoneNumberCellPhone, 
                    string EmailAddressHome, 
                    string EmailAddressWork, 
                    string Address, 
                    string PhysicalAddressHomeStreet, 
                    string PhysicalAddressHomeCity, 
                    string PhysicalAddressHomeCountry, 
                    string PhysicalAddressHomeState, 
                    string PhysicalAddressHomePostalCode, 
                    string PhysicalAddressWorkStreet, 
                    string PhysicalAddressWorkCity, 
                    string PhysicalAddressWorkCountry, 
                    string PhysicalAddressWorkState, 
                    string PhysicalAddressWorkPostalCode, 
                    string JobPosition, 
                    string Company, 
                    string LastModified, 
                    string belongsToAccount, 
                    bool isOriginal, 
                    bool isDeleted, 
                    string relationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/CreateContact2", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact> CreateContact2Async(
                    string ExternalId, 
                    string FullName, 
                    string PhoneNumberHome, 
                    string PhoneNumberWork, 
                    string PhoneNumberCellPhone, 
                    string EmailAddressHome, 
                    string EmailAddressWork, 
                    string Address, 
                    string PhysicalAddressHomeStreet, 
                    string PhysicalAddressHomeCity, 
                    string PhysicalAddressHomeCountry, 
                    string PhysicalAddressHomeState, 
                    string PhysicalAddressHomePostalCode, 
                    string PhysicalAddressWorkStreet, 
                    string PhysicalAddressWorkCity, 
                    string PhysicalAddressWorkCountry, 
                    string PhysicalAddressWorkState, 
                    string PhysicalAddressWorkPostalCode, 
                    string JobPosition, 
                    string Company, 
                    string LastModified, 
                    string belongsToAccount, 
                    bool isOriginal, 
                    bool isDeleted, 
                    string relationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuTask UpdateTask(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuTask nuObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateTask", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuTask> UpdateTaskAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuTask nuObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateEvent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuEvent UpdateEvent(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuEvent nuObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateEvent", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuEvent> UpdateEventAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuEvent nuObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateContact", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact UpdateContact(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuContact nuObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/UpdateContact", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact> UpdateContactAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuContact nuObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/DeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        bool DeleteUser(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/DeleteUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/DeleteAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        bool DeleteAccount(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/DeleteAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteAccountAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/SynchronizeUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        void SynchronizeUser(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/SynchronizeUser", ReplyAction="*")]
        System.Threading.Tasks.Task SynchronizeUserAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/SynchronizeUser2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        void SynchronizeUser2(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/SynchronizeUser2", ReplyAction="*")]
        System.Threading.Tasks.Task SynchronizeUser2Async(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetContactsUpdatedSince2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.NuContact[] GetContactsUpdatedSince2(string accountId, string sinceDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetContactsUpdatedSince2", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.NuContact[]> GetContactsUpdatedSince2Async(string accountId, string sinceDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetUserSalt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        string GetUserSalt(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/GetUserSalt", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUserSaltAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/LoginUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        bool LoginUser(SampleTaskConsoleApplication.DataModelServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/LoginUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> LoginUserAsync(SampleTaskConsoleApplication.DataModelServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/LoginUser2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NuObject))]
        SampleTaskConsoleApplication.DataModelServiceReference.User LoginUser2(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sync.today/LoginUser2", ReplyAction="*")]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> LoginUser2Async(string email, string password);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid internalIdField;
        
        private System.DateTime createdField;
        
        private bool isBlockedField;
        
        private int maintenanceField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid InternalId {
            get {
                return this.internalIdField;
            }
            set {
                this.internalIdField = value;
                this.RaisePropertyChanged("InternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
                this.RaisePropertyChanged("Created");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsBlocked {
            get {
                return this.isBlockedField;
            }
            set {
                this.isBlockedField = value;
                this.RaisePropertyChanged("IsBlocked");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Maintenance {
            get {
                return this.maintenanceField;
            }
            set {
                this.maintenanceField = value;
                this.RaisePropertyChanged("Maintenance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class DataNuObjectOfNuContact : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid internalIdField;
        
        private bool isDeletedField;
        
        private bool isOriginalField;
        
        private bool isBlockedField;
        
        private System.Guid belongsToAccountField;
        
        private NuContact nuObjectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid InternalId {
            get {
                return this.internalIdField;
            }
            set {
                this.internalIdField = value;
                this.RaisePropertyChanged("InternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
                this.RaisePropertyChanged("IsDeleted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsOriginal {
            get {
                return this.isOriginalField;
            }
            set {
                this.isOriginalField = value;
                this.RaisePropertyChanged("IsOriginal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsBlocked {
            get {
                return this.isBlockedField;
            }
            set {
                this.isBlockedField = value;
                this.RaisePropertyChanged("IsBlocked");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Guid BelongsToAccount {
            get {
                return this.belongsToAccountField;
            }
            set {
                this.belongsToAccountField = value;
                this.RaisePropertyChanged("BelongsToAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public NuContact NuObject {
            get {
                return this.nuObjectField;
            }
            set {
                this.nuObjectField = value;
                this.RaisePropertyChanged("NuObject");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InMemoryContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AtollonContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MoneyContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GoogleContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExchangeContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutlookContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SapContact))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public abstract partial class NuContact : NuObject {
        
        private NuContactName nameField;
        
        private System.Data.DataSet phoneNumbersField;
        
        private System.Data.DataSet emailAddressesField;
        
        private string addressField;
        
        private System.Data.DataSet physicalAddressesField;
        
        private string jobPositionField;
        
        private string companyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NuContactName Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.Data.DataSet PhoneNumbers {
            get {
                return this.phoneNumbersField;
            }
            set {
                this.phoneNumbersField = value;
                this.RaisePropertyChanged("PhoneNumbers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet EmailAddresses {
            get {
                return this.emailAddressesField;
            }
            set {
                this.emailAddressesField = value;
                this.RaisePropertyChanged("EmailAddresses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Data.DataSet PhysicalAddresses {
            get {
                return this.physicalAddressesField;
            }
            set {
                this.physicalAddressesField = value;
                this.RaisePropertyChanged("PhysicalAddresses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string JobPosition {
            get {
                return this.jobPositionField;
            }
            set {
                this.jobPositionField = value;
                this.RaisePropertyChanged("JobPosition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
                this.RaisePropertyChanged("Company");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuContactNameSimple))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuContactNameFull))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public abstract partial class NuContactName : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class NuContactNameSimple : NuContactName {
        
        private string fullNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class NuContactNameFull : NuContactName {
        
        private string firstNameField;
        
        private string surnameField;
        
        private string middleNameField;
        
        private string nicknameField;
        
        private string titleBeforeField;
        
        private string titleForField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
                this.RaisePropertyChanged("Surname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
                this.RaisePropertyChanged("MiddleName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Nickname {
            get {
                return this.nicknameField;
            }
            set {
                this.nicknameField = value;
                this.RaisePropertyChanged("Nickname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TitleBefore {
            get {
                return this.titleBeforeField;
            }
            set {
                this.titleBeforeField = value;
                this.RaisePropertyChanged("TitleBefore");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string TitleFor {
            get {
                return this.titleForField;
            }
            set {
                this.titleForField = value;
                this.RaisePropertyChanged("TitleFor");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InMemoryContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AtollonContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MoneyContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GoogleContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExchangeContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutlookContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SapContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuRequirement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public abstract partial class NuObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string externalIdField;
        
        private System.DateTime lastModifiedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
                this.RaisePropertyChanged("ExternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
                this.RaisePropertyChanged("LastModified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class NuEvent : NuObject {
        
        private bool isContactPersonSupportedField;
        
        private bool isAddressSupportedField;
        
        private string locationField;
        
        private string contentField;
        
        private string titleField;
        
        private System.DateTime dateToField;
        
        private System.DateTime dateFromField;
        
        private System.Nullable<System.DateTime> reminderField;
        
        private bool notificationField;
        
        private bool isPrivateField;
        
        private NuEventAddress nuEventAddressField;
        
        private NuTaskPriority priorityField;
        
        private string companyField;
        
        private NuContactPerson contactPersonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsContactPersonSupported {
            get {
                return this.isContactPersonSupportedField;
            }
            set {
                this.isContactPersonSupportedField = value;
                this.RaisePropertyChanged("IsContactPersonSupported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool IsAddressSupported {
            get {
                return this.isAddressSupportedField;
            }
            set {
                this.isAddressSupportedField = value;
                this.RaisePropertyChanged("IsAddressSupported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
                this.RaisePropertyChanged("Content");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
                this.RaisePropertyChanged("DateTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
                this.RaisePropertyChanged("DateFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<System.DateTime> Reminder {
            get {
                return this.reminderField;
            }
            set {
                this.reminderField = value;
                this.RaisePropertyChanged("Reminder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool Notification {
            get {
                return this.notificationField;
            }
            set {
                this.notificationField = value;
                this.RaisePropertyChanged("Notification");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsPrivate {
            get {
                return this.isPrivateField;
            }
            set {
                this.isPrivateField = value;
                this.RaisePropertyChanged("IsPrivate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public NuEventAddress NuEventAddress {
            get {
                return this.nuEventAddressField;
            }
            set {
                this.nuEventAddressField = value;
                this.RaisePropertyChanged("NuEventAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public NuTaskPriority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
                this.RaisePropertyChanged("Company");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public NuContactPerson ContactPerson {
            get {
                return this.contactPersonField;
            }
            set {
                this.contactPersonField = value;
                this.RaisePropertyChanged("ContactPerson");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class NuEventAddress : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string streetField;
        
        private string cityField;
        
        private string roomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
                this.RaisePropertyChanged("Street");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Room {
            get {
                return this.roomField;
            }
            set {
                this.roomField = value;
                this.RaisePropertyChanged("Room");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public enum NuTaskPriority {
        
        /// <remarks/>
        Low,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        High,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class NuContactPerson : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NuContactName nameField;
        
        private string emailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NuContactName Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuRequirement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class NuTask : NuObject {
        
        private string subjectField;
        
        private string bodyField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> dueDateField;
        
        private System.Nullable<System.DateTime> reminderField;
        
        private NuTaskPriority priorityField;
        
        private bool isPrivateField;
        
        private string companyField;
        
        private bool completedField;
        
        private NuRequirement[] parentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("Subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("Body");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
                this.RaisePropertyChanged("DueDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<System.DateTime> Reminder {
            get {
                return this.reminderField;
            }
            set {
                this.reminderField = value;
                this.RaisePropertyChanged("Reminder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public NuTaskPriority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool IsPrivate {
            get {
                return this.isPrivateField;
            }
            set {
                this.isPrivateField = value;
                this.RaisePropertyChanged("IsPrivate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
                this.RaisePropertyChanged("Company");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool Completed {
            get {
                return this.completedField;
            }
            set {
                this.completedField = value;
                this.RaisePropertyChanged("Completed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public NuRequirement[] Parents {
            get {
                return this.parentsField;
            }
            set {
                this.parentsField = value;
                this.RaisePropertyChanged("Parents");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class NuRequirement : NuTask {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class InMemoryContact : NuContact {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class AtollonContact : NuContact {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class MoneyContact : NuContact {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class GoogleContact : NuContact {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class ExchangeContact : NuContact {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class OutlookContact : NuContact {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class SapContact : NuContact {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class DataNuObjectOfNuEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid internalIdField;
        
        private bool isDeletedField;
        
        private bool isOriginalField;
        
        private bool isBlockedField;
        
        private System.Guid belongsToAccountField;
        
        private NuEvent nuObjectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid InternalId {
            get {
                return this.internalIdField;
            }
            set {
                this.internalIdField = value;
                this.RaisePropertyChanged("InternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
                this.RaisePropertyChanged("IsDeleted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsOriginal {
            get {
                return this.isOriginalField;
            }
            set {
                this.isOriginalField = value;
                this.RaisePropertyChanged("IsOriginal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsBlocked {
            get {
                return this.isBlockedField;
            }
            set {
                this.isBlockedField = value;
                this.RaisePropertyChanged("IsBlocked");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Guid BelongsToAccount {
            get {
                return this.belongsToAccountField;
            }
            set {
                this.belongsToAccountField = value;
                this.RaisePropertyChanged("BelongsToAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public NuEvent NuObject {
            get {
                return this.nuObjectField;
            }
            set {
                this.nuObjectField = value;
                this.RaisePropertyChanged("NuObject");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class DataNuObjectOfNuTask : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid internalIdField;
        
        private bool isDeletedField;
        
        private bool isOriginalField;
        
        private bool isBlockedField;
        
        private System.Guid belongsToAccountField;
        
        private NuTask nuObjectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid InternalId {
            get {
                return this.internalIdField;
            }
            set {
                this.internalIdField = value;
                this.RaisePropertyChanged("InternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
                this.RaisePropertyChanged("IsDeleted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsOriginal {
            get {
                return this.isOriginalField;
            }
            set {
                this.isOriginalField = value;
                this.RaisePropertyChanged("IsOriginal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsBlocked {
            get {
                return this.isBlockedField;
            }
            set {
                this.isBlockedField = value;
                this.RaisePropertyChanged("IsBlocked");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Guid BelongsToAccount {
            get {
                return this.belongsToAccountField;
            }
            set {
                this.belongsToAccountField = value;
                this.RaisePropertyChanged("BelongsToAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public NuTask NuObject {
            get {
                return this.nuObjectField;
            }
            set {
                this.nuObjectField = value;
                this.RaisePropertyChanged("NuObject");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleCommunicatorConnectInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public abstract partial class CommunicatorConnectInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class SimpleCommunicatorConnectInfo : CommunicatorConnectInfo {
        
        private string usernameField;
        
        private string passwordField;
        
        private string serverField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
                this.RaisePropertyChanged("Server");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sync.today/")]
    public partial class Account : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid internalIdField;
        
        private System.Guid belongsToUserField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string serverField;
        
        private CommunicatorConnectInfo connectInfoField;
        
        private string accountAssemblyNameField;
        
        private System.Data.DataSet updatesPolicyField;
        
        private System.Data.DataSet lastSyncField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid InternalId {
            get {
                return this.internalIdField;
            }
            set {
                this.internalIdField = value;
                this.RaisePropertyChanged("InternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.Guid BelongsToUser {
            get {
                return this.belongsToUserField;
            }
            set {
                this.belongsToUserField = value;
                this.RaisePropertyChanged("BelongsToUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
                this.RaisePropertyChanged("Server");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public CommunicatorConnectInfo ConnectInfo {
            get {
                return this.connectInfoField;
            }
            set {
                this.connectInfoField = value;
                this.RaisePropertyChanged("ConnectInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AccountAssemblyName {
            get {
                return this.accountAssemblyNameField;
            }
            set {
                this.accountAssemblyNameField = value;
                this.RaisePropertyChanged("AccountAssemblyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.Data.DataSet UpdatesPolicy {
            get {
                return this.updatesPolicyField;
            }
            set {
                this.updatesPolicyField = value;
                this.RaisePropertyChanged("UpdatesPolicy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.Data.DataSet LastSync {
            get {
                return this.lastSyncField;
            }
            set {
                this.lastSyncField = value;
                this.RaisePropertyChanged("LastSync");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTask", WrapperNamespace="http://sync.today/", IsWrapped=true)]
    public partial class CreateTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=0)]
        public SampleTaskConsoleApplication.DataModelServiceReference.NuTask nuObject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=1)]
        public System.Guid belongsToAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=2)]
        public bool isOriginal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=3)]
        public bool isDeleted;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> relationId;
        
        public CreateTaskRequest() {
        }
        
        public CreateTaskRequest(SampleTaskConsoleApplication.DataModelServiceReference.NuTask nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            this.nuObject = nuObject;
            this.belongsToAccount = belongsToAccount;
            this.isOriginal = isOriginal;
            this.isDeleted = isDeleted;
            this.relationId = relationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTaskResponse", WrapperNamespace="http://sync.today/", IsWrapped=true)]
    public partial class CreateTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=0)]
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuTask CreateTaskResult;
        
        public CreateTaskResponse() {
        }
        
        public CreateTaskResponse(SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuTask CreateTaskResult) {
            this.CreateTaskResult = CreateTaskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateEvent", WrapperNamespace="http://sync.today/", IsWrapped=true)]
    public partial class CreateEventRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=0)]
        public SampleTaskConsoleApplication.DataModelServiceReference.NuEvent nuObject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=1)]
        public System.Guid belongsToAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=2)]
        public bool isOriginal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=3)]
        public bool isDeleted;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> relationId;
        
        public CreateEventRequest() {
        }
        
        public CreateEventRequest(SampleTaskConsoleApplication.DataModelServiceReference.NuEvent nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            this.nuObject = nuObject;
            this.belongsToAccount = belongsToAccount;
            this.isOriginal = isOriginal;
            this.isDeleted = isDeleted;
            this.relationId = relationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateEventResponse", WrapperNamespace="http://sync.today/", IsWrapped=true)]
    public partial class CreateEventResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=0)]
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuEvent CreateEventResult;
        
        public CreateEventResponse() {
        }
        
        public CreateEventResponse(SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuEvent CreateEventResult) {
            this.CreateEventResult = CreateEventResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateContact", WrapperNamespace="http://sync.today/", IsWrapped=true)]
    public partial class CreateContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=0)]
        public SampleTaskConsoleApplication.DataModelServiceReference.NuContact nuObject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=1)]
        public System.Guid belongsToAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=2)]
        public bool isOriginal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=3)]
        public bool isDeleted;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> relationId;
        
        public CreateContactRequest() {
        }
        
        public CreateContactRequest(SampleTaskConsoleApplication.DataModelServiceReference.NuContact nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            this.nuObject = nuObject;
            this.belongsToAccount = belongsToAccount;
            this.isOriginal = isOriginal;
            this.isDeleted = isDeleted;
            this.relationId = relationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateContactResponse", WrapperNamespace="http://sync.today/", IsWrapped=true)]
    public partial class CreateContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sync.today/", Order=0)]
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact CreateContactResult;
        
        public CreateContactResponse() {
        }
        
        public CreateContactResponse(SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact CreateContactResult) {
            this.CreateContactResult = CreateContactResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataModelSoapChannel : SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataModelSoapClient : System.ServiceModel.ClientBase<SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap>, SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap {
        
        public DataModelSoapClient() {
        }
        
        public DataModelSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataModelSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataModelSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataModelSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.User CreateUser(SampleTaskConsoleApplication.DataModelServiceReference.User user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> CreateUserAsync(SampleTaskConsoleApplication.DataModelServiceReference.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.User CreateUser2(string InternalId, int Maintenance, string Email, string Password, string FirstName, string LastName) {
            return base.Channel.CreateUser2(InternalId, Maintenance, Email, Password, FirstName, LastName);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> CreateUser2Async(string InternalId, int Maintenance, string Email, string Password, string FirstName, string LastName) {
            return base.Channel.CreateUser2Async(InternalId, Maintenance, Email, Password, FirstName, LastName);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.User UpdateUser(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.User user) {
            return base.Channel.UpdateUser(id, user);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> UpdateUserAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.User user) {
            return base.Channel.UpdateUserAsync(id, user);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.User GetUser(System.Guid id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> GetUserAsync(System.Guid id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.Account CreateAccount(SampleTaskConsoleApplication.DataModelServiceReference.Account account) {
            return base.Channel.CreateAccount(account);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.Account> CreateAccountAsync(SampleTaskConsoleApplication.DataModelServiceReference.Account account) {
            return base.Channel.CreateAccountAsync(account);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.Account CreateAccount2(string InternalId, string BelongsToUser, string Username, string Password, string Server, string AccountAssemblyName) {
            return base.Channel.CreateAccount2(InternalId, BelongsToUser, Username, Password, Server, AccountAssemblyName);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.Account> CreateAccount2Async(string InternalId, string BelongsToUser, string Username, string Password, string Server, string AccountAssemblyName) {
            return base.Channel.CreateAccount2Async(InternalId, BelongsToUser, Username, Password, Server, AccountAssemblyName);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.Account UpdateAccount(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.Account account) {
            return base.Channel.UpdateAccount(id, account);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.Account> UpdateAccountAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.Account account) {
            return base.Channel.UpdateAccountAsync(id, account);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.Account GetAccount(System.Guid id) {
            return base.Channel.GetAccount(id);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.Account> GetAccountAsync(System.Guid id) {
            return base.Channel.GetAccountAsync(id);
        }
        
        public System.Data.DataSet GetAccounts(System.Guid userid) {
            return base.Channel.GetAccounts(userid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountsAsync(System.Guid userid) {
            return base.Channel.GetAccountsAsync(userid);
        }
        
        public System.Data.DataSet GetAccounts2(string userid) {
            return base.Channel.GetAccounts2(userid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccounts2Async(string userid) {
            return base.Channel.GetAccounts2Async(userid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskResponse SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap.CreateTask(SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskRequest request) {
            return base.Channel.CreateTask(request);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuTask CreateTask(SampleTaskConsoleApplication.DataModelServiceReference.NuTask nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskRequest inValue = new SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskRequest();
            inValue.nuObject = nuObject;
            inValue.belongsToAccount = belongsToAccount;
            inValue.isOriginal = isOriginal;
            inValue.isDeleted = isDeleted;
            inValue.relationId = relationId;
            SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskResponse retVal = ((SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap)(this)).CreateTask(inValue);
            return retVal.CreateTaskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskResponse> SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap.CreateTaskAsync(SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskRequest request) {
            return base.Channel.CreateTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskResponse> CreateTaskAsync(SampleTaskConsoleApplication.DataModelServiceReference.NuTask nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskRequest inValue = new SampleTaskConsoleApplication.DataModelServiceReference.CreateTaskRequest();
            inValue.nuObject = nuObject;
            inValue.belongsToAccount = belongsToAccount;
            inValue.isOriginal = isOriginal;
            inValue.isDeleted = isDeleted;
            inValue.relationId = relationId;
            return ((SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap)(this)).CreateTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SampleTaskConsoleApplication.DataModelServiceReference.CreateEventResponse SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap.CreateEvent(SampleTaskConsoleApplication.DataModelServiceReference.CreateEventRequest request) {
            return base.Channel.CreateEvent(request);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuEvent CreateEvent(SampleTaskConsoleApplication.DataModelServiceReference.NuEvent nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            SampleTaskConsoleApplication.DataModelServiceReference.CreateEventRequest inValue = new SampleTaskConsoleApplication.DataModelServiceReference.CreateEventRequest();
            inValue.nuObject = nuObject;
            inValue.belongsToAccount = belongsToAccount;
            inValue.isOriginal = isOriginal;
            inValue.isDeleted = isDeleted;
            inValue.relationId = relationId;
            SampleTaskConsoleApplication.DataModelServiceReference.CreateEventResponse retVal = ((SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap)(this)).CreateEvent(inValue);
            return retVal.CreateEventResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateEventResponse> SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap.CreateEventAsync(SampleTaskConsoleApplication.DataModelServiceReference.CreateEventRequest request) {
            return base.Channel.CreateEventAsync(request);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateEventResponse> CreateEventAsync(SampleTaskConsoleApplication.DataModelServiceReference.NuEvent nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            SampleTaskConsoleApplication.DataModelServiceReference.CreateEventRequest inValue = new SampleTaskConsoleApplication.DataModelServiceReference.CreateEventRequest();
            inValue.nuObject = nuObject;
            inValue.belongsToAccount = belongsToAccount;
            inValue.isOriginal = isOriginal;
            inValue.isDeleted = isDeleted;
            inValue.relationId = relationId;
            return ((SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap)(this)).CreateEventAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SampleTaskConsoleApplication.DataModelServiceReference.CreateContactResponse SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap.CreateContact(SampleTaskConsoleApplication.DataModelServiceReference.CreateContactRequest request) {
            return base.Channel.CreateContact(request);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact CreateContact(SampleTaskConsoleApplication.DataModelServiceReference.NuContact nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            SampleTaskConsoleApplication.DataModelServiceReference.CreateContactRequest inValue = new SampleTaskConsoleApplication.DataModelServiceReference.CreateContactRequest();
            inValue.nuObject = nuObject;
            inValue.belongsToAccount = belongsToAccount;
            inValue.isOriginal = isOriginal;
            inValue.isDeleted = isDeleted;
            inValue.relationId = relationId;
            SampleTaskConsoleApplication.DataModelServiceReference.CreateContactResponse retVal = ((SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap)(this)).CreateContact(inValue);
            return retVal.CreateContactResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateContactResponse> SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap.CreateContactAsync(SampleTaskConsoleApplication.DataModelServiceReference.CreateContactRequest request) {
            return base.Channel.CreateContactAsync(request);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.CreateContactResponse> CreateContactAsync(SampleTaskConsoleApplication.DataModelServiceReference.NuContact nuObject, System.Guid belongsToAccount, bool isOriginal, bool isDeleted, System.Nullable<System.Guid> relationId) {
            SampleTaskConsoleApplication.DataModelServiceReference.CreateContactRequest inValue = new SampleTaskConsoleApplication.DataModelServiceReference.CreateContactRequest();
            inValue.nuObject = nuObject;
            inValue.belongsToAccount = belongsToAccount;
            inValue.isOriginal = isOriginal;
            inValue.isDeleted = isDeleted;
            inValue.relationId = relationId;
            return ((SampleTaskConsoleApplication.DataModelServiceReference.DataModelSoap)(this)).CreateContactAsync(inValue);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact CreateContact2(
                    string ExternalId, 
                    string FullName, 
                    string PhoneNumberHome, 
                    string PhoneNumberWork, 
                    string PhoneNumberCellPhone, 
                    string EmailAddressHome, 
                    string EmailAddressWork, 
                    string Address, 
                    string PhysicalAddressHomeStreet, 
                    string PhysicalAddressHomeCity, 
                    string PhysicalAddressHomeCountry, 
                    string PhysicalAddressHomeState, 
                    string PhysicalAddressHomePostalCode, 
                    string PhysicalAddressWorkStreet, 
                    string PhysicalAddressWorkCity, 
                    string PhysicalAddressWorkCountry, 
                    string PhysicalAddressWorkState, 
                    string PhysicalAddressWorkPostalCode, 
                    string JobPosition, 
                    string Company, 
                    string LastModified, 
                    string belongsToAccount, 
                    bool isOriginal, 
                    bool isDeleted, 
                    string relationId) {
            return base.Channel.CreateContact2(ExternalId, FullName, PhoneNumberHome, PhoneNumberWork, PhoneNumberCellPhone, EmailAddressHome, EmailAddressWork, Address, PhysicalAddressHomeStreet, PhysicalAddressHomeCity, PhysicalAddressHomeCountry, PhysicalAddressHomeState, PhysicalAddressHomePostalCode, PhysicalAddressWorkStreet, PhysicalAddressWorkCity, PhysicalAddressWorkCountry, PhysicalAddressWorkState, PhysicalAddressWorkPostalCode, JobPosition, Company, LastModified, belongsToAccount, isOriginal, isDeleted, relationId);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact> CreateContact2Async(
                    string ExternalId, 
                    string FullName, 
                    string PhoneNumberHome, 
                    string PhoneNumberWork, 
                    string PhoneNumberCellPhone, 
                    string EmailAddressHome, 
                    string EmailAddressWork, 
                    string Address, 
                    string PhysicalAddressHomeStreet, 
                    string PhysicalAddressHomeCity, 
                    string PhysicalAddressHomeCountry, 
                    string PhysicalAddressHomeState, 
                    string PhysicalAddressHomePostalCode, 
                    string PhysicalAddressWorkStreet, 
                    string PhysicalAddressWorkCity, 
                    string PhysicalAddressWorkCountry, 
                    string PhysicalAddressWorkState, 
                    string PhysicalAddressWorkPostalCode, 
                    string JobPosition, 
                    string Company, 
                    string LastModified, 
                    string belongsToAccount, 
                    bool isOriginal, 
                    bool isDeleted, 
                    string relationId) {
            return base.Channel.CreateContact2Async(ExternalId, FullName, PhoneNumberHome, PhoneNumberWork, PhoneNumberCellPhone, EmailAddressHome, EmailAddressWork, Address, PhysicalAddressHomeStreet, PhysicalAddressHomeCity, PhysicalAddressHomeCountry, PhysicalAddressHomeState, PhysicalAddressHomePostalCode, PhysicalAddressWorkStreet, PhysicalAddressWorkCity, PhysicalAddressWorkCountry, PhysicalAddressWorkState, PhysicalAddressWorkPostalCode, JobPosition, Company, LastModified, belongsToAccount, isOriginal, isDeleted, relationId);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuTask UpdateTask(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuTask nuObject) {
            return base.Channel.UpdateTask(id, nuObject);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuTask> UpdateTaskAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuTask nuObject) {
            return base.Channel.UpdateTaskAsync(id, nuObject);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuEvent UpdateEvent(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuEvent nuObject) {
            return base.Channel.UpdateEvent(id, nuObject);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuEvent> UpdateEventAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuEvent nuObject) {
            return base.Channel.UpdateEventAsync(id, nuObject);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact UpdateContact(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuContact nuObject) {
            return base.Channel.UpdateContact(id, nuObject);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.DataNuObjectOfNuContact> UpdateContactAsync(System.Guid id, SampleTaskConsoleApplication.DataModelServiceReference.NuContact nuObject) {
            return base.Channel.UpdateContactAsync(id, nuObject);
        }
        
        public bool DeleteUser(System.Guid id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(System.Guid id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public bool DeleteAccount(System.Guid id) {
            return base.Channel.DeleteAccount(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAccountAsync(System.Guid id) {
            return base.Channel.DeleteAccountAsync(id);
        }
        
        public void SynchronizeUser(System.Guid userId) {
            base.Channel.SynchronizeUser(userId);
        }
        
        public System.Threading.Tasks.Task SynchronizeUserAsync(System.Guid userId) {
            return base.Channel.SynchronizeUserAsync(userId);
        }
        
        public void SynchronizeUser2(string userId) {
            base.Channel.SynchronizeUser2(userId);
        }
        
        public System.Threading.Tasks.Task SynchronizeUser2Async(string userId) {
            return base.Channel.SynchronizeUser2Async(userId);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.NuContact[] GetContactsUpdatedSince2(string accountId, string sinceDateTime) {
            return base.Channel.GetContactsUpdatedSince2(accountId, sinceDateTime);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.NuContact[]> GetContactsUpdatedSince2Async(string accountId, string sinceDateTime) {
            return base.Channel.GetContactsUpdatedSince2Async(accountId, sinceDateTime);
        }
        
        public string GetUserSalt(string email) {
            return base.Channel.GetUserSalt(email);
        }
        
        public System.Threading.Tasks.Task<string> GetUserSaltAsync(string email) {
            return base.Channel.GetUserSaltAsync(email);
        }
        
        public bool LoginUser(SampleTaskConsoleApplication.DataModelServiceReference.User user) {
            return base.Channel.LoginUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> LoginUserAsync(SampleTaskConsoleApplication.DataModelServiceReference.User user) {
            return base.Channel.LoginUserAsync(user);
        }
        
        public SampleTaskConsoleApplication.DataModelServiceReference.User LoginUser2(string email, string password) {
            return base.Channel.LoginUser2(email, password);
        }
        
        public System.Threading.Tasks.Task<SampleTaskConsoleApplication.DataModelServiceReference.User> LoginUser2Async(string email, string password) {
            return base.Channel.LoginUser2Async(email, password);
        }
    }
}
